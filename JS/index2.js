//создаем переменную, для пользования хослтом
const holst = document.getElementById("game");
//создаем переменную для того, чтобы показать, какой вид игры у нас будет
const render = canvas.getContext("2d");
//создадим переменную для указания размера квадратиков сетки
const grid = 32;
//Создадим переменную с пустым массивом, куда будем записывать последовательность появления фигур на экране
let arr = [];

//создадаим массив с двумерным изображением для того, чтобы следить за изменениями в каждой клетке. Размер поля будет 10 на 20 и еще несколько клеток вне поля видимости
let arr2D = [];

//мы сделаем заполнение <arr2D> клетками для игры
//этот цикл будет формировать строки
for (let row = -2; row < 20; row++) {
  arr2D[row] = [];

  //этот цикл сформирует колонки
  for (let col = 0; col < 10; col++) {
    arr2D[col] = [];
  }
}

//следующая переменная будет содержать в себе объект с фигурами и их изображением
const figure = {
  I: [
    [0, 0, 0],
    [1, 1, 1],
    [0, 0, 0],
    [0, 0, 0],
  ],
  II: [
    [1, 0, 0],
    [1, 1, 1],
    [0, 0, 0],
  ],
  III: [
    [0, 0, 1],
    [1, 1, 1],
    [0, 0, 0],
  ],
  IV: [
    [1, 1],
    [1, 1],
  ],
  V: [
    [0, 1, 1],
    [1, 1, 0],
    [0, 0, 0],
  ],
  VI: [
    [0, 1, 0],
    [1, 1, 1],
    [0, 0, 0],
  ],
};

//дальше мы создадим перменную, в которую поместим объект с указаниме цвета каждого элемента
const color = {
  I: "red",
  II: "green",
  III: "purple",
  IV: "yellow",
  V: "blue",
  VI: "white",
};

//счетчик
let count = 0;

//переменная, которая следит ща текущей фигурой в игре
let watching = getNextFigure();

//переменная, которая следит за тем, чтобы можно было остановить игру
let pause = null;

//переменная, которая нужна для остановки игры после завершения
let stop = false;

//получается, у нас есть объект с фигурами. Каждая фигура - это отдельный массив. Для того, чтобы использовать фигуру, нужно создать функциЮ, которая будет генерировать рандомное число (из имеющихся в доступе), которое явлется индексом фигуры.

function getNum(min, max) {
  //Math - это объект, который имеет свои свойства и методы.
  min = Math.ceil(min); //.ceil - метод, округляющий число до большего значения
  max = Math.floor(max); //.floor - метод, округляющий число до меньшего значения

  return Math.floor(Math.random() * (max - min + 1)) + min;
}

//Создадим функцию, которая будет доставать любую фигуру из массива (они там расположены по очередности) и пушить ее в массив с последовательностью

function randFigure() {
  //сделаем массив, куда загрузим последовательную очередь фигур
  const queue = ["I", "II", "III", "IV", "V", "VI"];

  //сделаем цикл, перебирающий длину массива
  while (queue.length) {
    //создаем переменную, куда грузим функцию, создающую рандомное число (в определенном диапазоне). Пишем, откуда начинать перебор
    const rand = getNum(0, queue.length - 1);
    //создаем переменную, где берем массив, указываем на рандомное число и указываем на то кол-во элементов, которое нужно вычленить
    const name = queue.splice(rand, 1)[0];

    //в массив с последовательным появлением фигур вносим тот элемент, который был выбран случайно
    arr.push(name);
  }
}

//следующим этапом нам нужно создать функцию, которая будет содержать фигуры, которые будут появляться в массиве поочередности

function getNextFigure() {
  if (arr === 0) {
    randFigure();
  }

  //возьмем первую фигуру из массива
  let name = arr.pop();

  //создаем матрицу, с котороой отрисуем фигуру
  let matrix = figure[name];

  //создаем переменную, в которую загрузим значение старта фигуры. Начало будет с колонок.
  //'I' и 'II' будет стартовать с середины. Как только не понял)
  let col = arr[0].length / 2 - Math.ceil(matrix[0].length / 2);

  //следующая переменная будет координировать фигуры по строкам
  let row = name === "I" ? -1 : -2;

  //что должна выдавать функция
  return {
    name: name,
    matrix: matrix,
    col: col,
    row: row,
  };
}

//следуюший блок будет посвящен действиям над фигурой
